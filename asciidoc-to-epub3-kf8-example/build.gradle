buildscript {
	dependencies {
		classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.4'
	}
}

plugins {
  id 'org.asciidoctor.convert' version '1.5.2'
}

import org.gradle.internal.os.OperatingSystem

apply plugin: 'java'
apply plugin: 'org.asciidoctor.convert'

version = '1.0.0-SNAPSHOT'


task downloadKindlegen() {
  ext.downloadUrl = OperatingSystem.current().isMacOsX() ? 'https://kindlegen.s3.amazonaws.com/KindleGen_Mac_i386_v2_9.zip' : 'http://kindlegen.s3.amazonaws.com/kindlegen_linux_2.6_i386_v2_9.tar.gz	'
  ext.output = file("$buildDir/kindlegen/kindlegen.zip")
  outputs.file output
  inputs.property('downloadUrl', downloadUrl)
  doLast {
    if(!output.exists()) {
      output.parentFile.mkdirs()
      output.createNewFile()
    }
    println "Downloading Kindlegen from $downloadUrl"
    new URL( downloadUrl ).withInputStream {
      output << it
    }
  }
}

task extractKindlegen(type: Copy) {
  dependsOn downloadKindlegen
  from {
    zipTree(downloadKindlegen.output)
  }
  into "$buildDir/kindlegen/"
}

asciidoctor {
	backends 	'epub3'
	options     doctype: 'book'
	sources { include 'example-manual.adoc' }
	attributes	'build-gradle': file('build.gradle'),
				'sourcedir': project.sourceSets.main.java.srcDirs[0],
				'endpoint-url': 'http://example.org',
				'source-highlighter' : 'coderay',
				'imagesdir': 'images',
				'toc':'left',
				'icons': 'font',
				'setanchors':'true',
				'idprefix':'',
				'idseparator':'-',
				'docinfo1':'true',
				'ebook-format':'kf8'
}

asciidoctor.dependsOn extractKindlegen
